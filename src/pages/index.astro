---
import { getCollection } from "astro:content";
import { FlaskConical, Rocket } from "lucide-astro";
import HorizontalCard from "../components/HorizontalCard.astro";
import { IS_BLOG_ENABLED } from "../config";
import experiments from "../data/experiments.json";
import projects from "../data/projects.json";
import BaseLayout from "../layouts/BaseLayout.astro";
import createSlug from "../lib/createSlug";

const posts = (await getCollection("blog")).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf(),
);

const last_posts = posts.slice(0, 3);
const last_projects = projects.slice(0, 3);
const last_experiments = experiments.slice(0, 3);

const hasBlogPosts = posts.length > 0 && IS_BLOG_ENABLED;
const hasMoreProjects = projects.length > last_projects.length;
const hasMoreExperiments = experiments.length > last_experiments.length;
---

<BaseLayout sideBarActiveItemID="home">
  <div class="pb-12 mt-5">
    <div class="text-xl py-1">Hi there! üëã</div>
    <div class="text-5xl font-bold">I'm Javi Aguilar</div>
    <div class="text-3xl py-3 font-bold">Full-Stack Software Engineer</div>
    <div class="py-2 text-lg">
      üìç Berlin. Passionate about web technologies and crafting good user
      experiences. I help teams launch successful products while experimenting
      and exploring new technologies through many side projects.
    </div>
    <div class="py-2 text-lg flex flex-wrap gap-2">
      <span class="badge badge-outline">JavaScript</span>
      <span class="badge badge-outline">TypeScript</span>
      <span class="badge badge-outline">CSS</span>
      <!-- <span class="badge badge-outline">TailwindCSS</span> -->
      <span class="badge badge-outline">HTML</span>
      <!-- <span class="badge badge-outline">Next.js</span>
      <span class="badge badge-outline">Astro</span>
      <span class="badge badge-outline">Remix</span> -->
      <span class="badge badge-outline">PHP</span>
      <!-- <span class="badge badge-outline">Symfony</span> -->
      <span class="badge badge-outline">React</span>
      <span class="badge badge-outline">Astro</span>
      <span class="badge badge-outline">AWS</span>
      <span class="badge badge-outline">Cloudflare</span>
      <!-- <span class="badge badge-outline">DynamoDB</span>
      <span class="badge badge-outline">PostgreSQL</span>
      <span class="badge badge-outline">Redis</span>
      <span class="badge badge-outline">Kafka</span>
      <span class="badge badge-outline">OpenSearch</span> -->
    </div>
  </div>

  {
    hasBlogPosts && (
      <>
        <div>
          <div class="text-3xl w-full font-bold mb-2">Recent posts</div>
        </div>
        {last_posts.map((post) => (
          <>
            <HorizontalCard
              title={post.data.title}
              img={post.data.heroImage}
              desc={post.data.description}
              url={"/blog/" + createSlug(post.data.title, post.slug)}
              target="_self"
              badge={post.data.badge}
            />
            <div class="divider my-0" />
          </>
        ))}
      </>
    )
  }

  <div>
    <div
      class={"text-3xl w-full font-bold mb-2" + (hasBlogPosts ? " mt-10" : "")}
    >
      Latest projects <Rocket class="inline-block" />
    </div>
  </div>

  {
    last_projects.map((project, index) => (
      <>
        <HorizontalCard
          title={project.title}
          img={project.img}
          desc={project.desc}
          url={project.url}
          badge={project.badge}
        />
        {index < last_projects.length - 1 && <div class="divider my-0" />}
      </>
    ))
  }
  {
    hasMoreProjects && (
      <div class="text-center mt-5">
        <a href="/projects" class="btn btn-outline btn-secondary">
          View more projects
        </a>
      </div>
    )
  }

  <div>
    <div class="text-3xl w-full font-bold mb-2 mt-10">
      Latest experiments <FlaskConical class="inline-block" />
    </div>
  </div>

  {
    last_experiments.map((experiment, index) => (
      <>
        <HorizontalCard
          title={experiment.title}
          img={experiment.img}
          desc={experiment.desc}
          url={"/experiments/" + experiment.slug}
        />
        {index < last_experiments.length - 1 && <div class="divider my-0" />}
      </>
    ))
  }
  {
    hasMoreExperiments && (
      <div class="text-center mt-5">
        <a href="/experiments" class="btn btn-outline btn-secondary">
          View more experiments
        </a>
      </div>
    )
  }
</BaseLayout>
